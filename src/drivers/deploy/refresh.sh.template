#!/bin/bash

# Copyright (c) Microsoft Corporation
# All rights reserved.
#
# MIT License
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
# documentation files (the "Software"), to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and
# to permit persons to whom the Software is furnished to do so, subject to the following conditions:
# The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING
# BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
# DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

pushd $(dirname "$0") > /dev/null

echo "Re-label all the node in the cluster!"
echo "New machine with GPU label will be labeled on kubernetes"

/bin/bash node-label.sh || exit $?

echo "Remove the label on the machine without GPU tag"

{% for host in machinelist %}
    {% for role in serviceinfo['deploy-rules'] %}

        {% if 'in' in role %}
            {% if role['in'] in machineinfo[machinelist[host]] %}
                kubectl label nodes {{ machinelist[ host ][ 'nodename' ] }} {{role['in']}}='true' || exit $?
                if !(kubectl get po -o wide | grep -1 host['nodename'] | grep -q {{servicename}})
                    echo "Start service {{servicename}} frome Node {{ machinelist[ host ][ 'nodename'] }} according to the cluster-configuration label definithion change"
                    ./{{serviceinfo['start-script']}}
                fi
            {% else %}
                if kubectl describe node {{ machinelist[ host ][ 'nodename' ] }} | grep -q {{role['in']}}"=true"; then
                    echo "Remove Node {{ machinelist[ host ][ 'nodename'] }}'s label, due to the cluster-configuration machinelist doesn't specify this label"
                    kubectl label nodes {{ machinelist[ host ][ 'nodename' ] }} {{role['in']}}- || exit $?
                fi
            {% endif %}
        {% endif %}

        {% if 'notin' in role %}
            {% if role['notin'] in machineinfo[machinelist[host]] %}
                kubectl label nodes {{ machinelist[ host ][ 'nodename' ] }} {{role['notin']}}='true' || exit $?
                if kubectl get po -o wide | grep -1 host['nodename'] | grep -q {{servicename}}
                    echo "Remove service {{servicename}} frome Node {{ machinelist[ host ][ 'nodename'] }} according to the cluster-configuration label definithion change"
                    ./{{serviceinfo['stop-script']}}
                fi
            {% endif %}
            {% else %}
                if kubectl describe node {{ machinelist[ host ][ 'nodename' ] }} | grep -q {{role['notin']}}"=true"; then
                    echo "Remove Node {{ machinelist[ host ][ 'nodename'] }}'s label, due to the cluster-configuration machinelist doesn't specify this label"
                    kubectl label nodes {{ machinelist[ host ][ 'nodename' ] }} {{role['notin']}}- || exit $?
                fi
            {% endif %}
        {% endif %}
        
    {% endfor %}

    
{% endfor %}

popd > /dev/null